language: go

go:
- 1.13.x

env:
  global:
    - GO111MODULE=on
    - GORELEASER_VERSION=0.120.2
    - ARIANG_VERSION="1.1.4"
    - UPXVER="3.94"

install:
  - curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh -s -- -b $(go env GOPATH)/bin v${GORELEASER_VERSION}
  - wget https://github.com/mayswind/AriaNg/releases/download/${ARIANG_VERSION}/AriaNg-${ARIANG_VERSION}.zip && unzip -q AriaNg-${ARIANG_VERSION}.zip -d AriaNg
  - |
    if [[ ! -f "./upx" ]]
    then
      echo "Installing upx .."
      curl -OL "https://github.com/upx/upx/releases/download/v${UPXVER}/upx-${UPXVER}-amd64_linux.tar.xz"
      tar xvf "upx-${UPXVER}-amd64_linux.tar.xz"
      cp "upx-${UPXVER}-amd64_linux/upx" "$(go env GOPATH)/bin"
    fi
  - ls -al
  - upx --version
  - chmod +x upx.sh
  - ls -al
  - go get -u -v github.com/UnnoTed/fileb0x
  - go install github.com/UnnoTed/fileb0x

deploy:
  - provider: script
    skip_cleanup: true
    script: >-
      export GO_VERSION="$TRAVIS_GO_VERSION" &&
      export BUILT_BY="$(whoami)@$(hostname)" &&
      export GIT_BRANCH="$TRAVIS_BRANCH" &&
      goreleaser release --skip-validate --skip-sign --debug
    on:
      tags: true

  - provider: script
    skip_cleanup: true
    script: >-
      export GO_VERSION="$TRAVIS_GO_VERSION" &&
      export BUILT_BY="$(whoami)@$(hostname)" &&
      export GIT_BRANCH="$TRAVIS_BRANCH" &&
      goreleaser release --snapshot --skip-publish --rm-dist --debug
    on:
      all_branches: true
      tags: false